{% set name = "detectron2" %}
{% set version = "0.6" %}

# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/facebookresearch/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: 9757fed05fa32acc2116ea038185f08409d5e854573e70f41909a358b70d1004

build:
  number: 2
  skip: true  # [win]
  string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ torch_proc_type }}  # [cuda_compiler_version == "None"]
  string: py{{ CONDA_PY }}cuda{{ cuda_compiler_version|replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ torch_proc_type }}  # [cuda_compiler_version != "None"]
  run_exports:
    # ensure matching proc-type
    - torchvision =*=*_{{ torch_proc_type }}                                              # [cuda_compiler_version == "None"]

requirements:
  build:
    - python                                         # [build_platform != target_platform]
    - cross-python_{{ target_platform }}             # [build_platform != target_platform]
    - pytorch ={{ pytorch }}={{ torch_proc_type }}*  # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}      # [cuda_compiler_version != "None"]
  host:
    - python
    - pip
    - pytorch ={{ pytorch }}={{ torch_proc_type }}*
  run:
    - python
    - pillow >=7.1
    - matplotlib-base
    - pycocotools >=2.0.2
    - termcolor >=1.1    
    - cloudpickle
    - tqdm >4.29.0
    - tensorboard
    - fvcore >=0.1.5,<0.1.6
    - iopath >=0.1.7,<0.1.10
    - future    
    - pydot
    - omegaconf >=2.1
    - hydra-core >=1.1
    - yacs >=0.1.8
    - torchvision
  run_constrained:
    # 2022/02/05 hmaarrfk
    # While conda packaging seems to allow us to specify
    # constraints on the same package in different lines
    # the resulting package doesn't have the ability to
    # be specified in multiples lines
    # This makes it tricky to use run_exports
    # we add the GPU constraint in the run_constrained
    # to allow us to have "two" constraints on the
    # running package
    - pytorch ={{ pytorch }}={{ torch_proc_type }}*

test:
  imports:
    - detectron2
    - detectron2.model_zoo
  commands:
    - exit 1

about:
  home: https://github.com/facebookresearch/detectron2
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Detectron2 is FAIR's next-generation platform for object detection and segmentation.
  doc_url: https://github.com/facebookresearch/detectron2
  dev_url: https://github.com/facebookresearch/detectron2

extra:
  recipe-maintainers:
    - mxr-conda
    - oblute
    - rluria14
    - ndmaxar
    - baszalmstra
    - xhochy
